# Render Blueprint for n8n + Postgres (Free Tier)

services:
  - type: web
    name: n8n
    plan: free
    runtime: image
    image:
      url: docker.io/n8nio/n8n:latest
    envVars:
      - key: TRUST_PROXY
        value: "true"
      - key: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
        value: "true"
      - key: DB_TYPE
        value: postgresdb
      # Using Neon Postgres (external) instead of Render managed DB
      - key: DB_POSTGRESDB_CONNECTION_URL
        sync: false
      - key: DB_POSTGRESDB_SSL
        value: "true"
      - key: N8N_DIAGNOSTICS_ENABLED
        value: "false"
      - key: N8N_PERSONALIZATION_ENABLED
        value: "false"
      # Add your secrets below (set in Render dashboard for security)
      - key: N8N_BASIC_AUTH_ACTIVE
        sync: false
      - key: N8N_ENCRYPTION_KEY
        sync: false
      - key: N8N_USER_MANAGEMENT_JWT_SECRET
        sync: false
      - key: N8N_BASIC_AUTH_USER
        sync: false
      - key: N8N_BASIC_AUTH_PASSWORD
        sync: false
      # Optional: WEBHOOK_URL for incoming webhooks
      - key: WEBHOOK_URL
        value: https://n8n-3d2s.onrender.com/

# NOTE: The managed Render Postgres block has been removed because this blueprint
# now uses an external Neon Postgres instance. If you still want a Render-managed
# database, re-add a `databases` block here and switch the DB env vars back to
# reference the managed database (the previous version used `fromDatabase`).
